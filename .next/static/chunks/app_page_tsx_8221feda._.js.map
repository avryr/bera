{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Avry/Documents/SeniorProject/bera/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport $ from 'jquery';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\n//default input values\r\nconst defaultLoc1 = 'W8EDU';\r\nconst defaultLoc2 = 'N8OBJ';\r\n\r\n//chart colors\r\nconst berBackground = '#E56B6F';\r\nconst berOutline = '#D593B7';\r\nconst weathBackground = '#4E445F';\r\nconst weathOutline = '#67597A';\r\n\r\n//funcs\r\nfunction changeLocs(loc1: string, loc2: string) {\r\n    // Set the text of the location spans\r\n    $('#loc1').text(loc1);\r\n    $('#loc2').text(loc2);\r\n}\r\nfunction toggleChart(divID: string) {\r\n    $(divID).toggle();\r\n    console.log(divID + \" clicked!\");\r\n}\r\n\r\n// React useEffect hook instead of jQuery document ready\r\nfunction useInitialization() {\r\n    useEffect(() => {\r\n        changeLocs(defaultLoc1, defaultLoc2);\r\n        // Set checkboxes to unchecked\r\n        $('input[type=checkbox]').prop('checked', false);\r\n    }, []); // Empty dependency array means this runs once on mount... I hope\r\n}\r\n\r\n// Register Chart.js components\r\nChart.register(...registerables);\r\n\r\n// Generic chart component that handles all weather metrics\r\nfunction MetricChart({ \r\n    dateFrom, \r\n    dateTo, \r\n    metric,\r\n    station,\r\n    title, \r\n    unit, \r\n    minValue = undefined, \r\n    maxValue = undefined \r\n}: { \r\n    dateFrom: string, \r\n    dateTo: string, \r\n    metric: string,\r\n    station?: string, \r\n    title: string, \r\n    unit: string,\r\n    minValue?: number,\r\n    maxValue?: number \r\n}) {\r\n    const [chartData, setChartData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Bit Error Rate',\r\n                data: [],\r\n                fill: false,\r\n                backgroundColor: berBackground,\r\n                borderColor: berOutline,\r\n                borderWidth: 1,\r\n                tension: 0.1,\r\n                yAxisID: 'y-ber'\r\n            },\r\n            {\r\n                label: title,\r\n                data: [],\r\n                fill: false,\r\n                backgroundColor: weathBackground,\r\n                borderColor: weathOutline,\r\n                borderWidth: 1,\r\n                tension: 0.1,\r\n                yAxisID: 'y-metric'\r\n            }\r\n        ]\r\n    });\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch bit error rate data\r\n        const berPromise = fetch(`/api/get-chart?metric=bitErrorRate&dateFrom=${dateFrom}&dateTo=${dateTo}`)\r\n            .then(response => {\r\n                if (!response.ok) throw new Error('Failed to fetch BER data');\r\n                return response.json();\r\n            });\r\n\r\n        // Fetch metric data\r\n        const metricPromise = fetch(`/api/get-chart?metric=${metric}&dateFrom=${dateFrom}&dateTo=${dateTo}&station=${station}`)\r\n            .then(response => {\r\n                if (!response.ok) throw new Error(`Failed to fetch ${metric} data`);\r\n                return response.json();\r\n            });\r\n\r\n        // Wait for both requests to complete\r\n        Promise.all([berPromise, metricPromise])\r\n            .then(([berData, metricData]) => {\r\n                // Special handling for pressure (convert Pa to hPa)\r\n                const metricValues = metric === 'barometricPressure' \r\n                    ? metricData.y.map((value: number) => value / 100)\r\n                    : metricData.y;\r\n\r\n                setChartData({\r\n                    labels: berData.x,\r\n                    datasets: [\r\n                        {\r\n                            ...chartData.datasets[0],\r\n                            data: berData.y\r\n                        },\r\n                        {\r\n                            ...chartData.datasets[1],\r\n                            data: metricValues\r\n                        }\r\n                    ]\r\n                });\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.error(`Error fetching ${metric} chart data:`, err);\r\n                setError(err.message);\r\n                setLoading(false);\r\n            });\r\n    }, [dateFrom, dateTo, metric]);\r\n\r\n    if (loading) return <div>Loading chart data...</div>;\r\n    if (error) return <div>Error loading chart data: {error}</div>;\r\n\r\n    const options = {\r\n        responsive: true,\r\n        scales: {\r\n            'y-metric': {\r\n                type: 'linear' as const,\r\n                position: 'left' as const,\r\n                beginAtZero: minValue === undefined,\r\n                min: minValue,\r\n                max: maxValue,\r\n                title: {\r\n                    display: true,\r\n                    text: `${title} (${unit})`\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: true\r\n                }\r\n            },\r\n            'y-ber': {\r\n                type: 'linear' as const,\r\n                position: 'right' as const,\r\n                min: 0,\r\n                max: 1,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Bit Error Rate (normalized)'\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: false\r\n                }\r\n            },\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Time'\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return <Line data={chartData} options={options} />;\r\n}\r\n\r\n// Specific chart components that use the generic component\r\nfunction TemperatureChart({ dateFrom, dateTo, station  }: { dateFrom: string, dateTo: string, station: string}) {\r\n    return <MetricChart \r\n        dateFrom={dateFrom} \r\n        dateTo={dateTo} \r\n        metric=\"temperature\"\r\n        station={station} \r\n        title=\"Temperature\" \r\n        unit=\"°C\" \r\n    />;\r\n}\r\n\r\nfunction HumidityChart({ dateFrom, dateTo, station}: { dateFrom: string, dateTo: string, station: string}) {\r\n    return <MetricChart \r\n        dateFrom={dateFrom} \r\n        dateTo={dateTo} \r\n        metric=\"relativeHumidity\"\r\n        station={station}\r\n        title=\"Humidity\" \r\n        unit=\"%\" \r\n    />;\r\n}\r\n\r\nfunction DewpointChart({ dateFrom, dateTo, station }: { dateFrom: string, dateTo: string, station: string}) {\r\n    return <MetricChart \r\n        dateFrom={dateFrom} \r\n        dateTo={dateTo} \r\n        metric=\"dewpoint\"\r\n        station={station} \r\n        title=\"Dew point\" \r\n        unit=\"°C\" \r\n    />;\r\n}\r\n\r\nfunction PrecipitationChart({ dateFrom, dateTo, station }: { dateFrom: string, dateTo: string, station: string}) {\r\n    return <MetricChart \r\n        dateFrom={dateFrom} \r\n        dateTo={dateTo} \r\n        metric=\"precipitation\"\r\n        station={station} \r\n        title=\"Precipitation\" \r\n        unit=\"cm\" \r\n    />;\r\n}\r\n\r\nfunction PressureChart({ dateFrom, dateTo, station }: { dateFrom: string, dateTo: string, station: string}) {\r\n    return <MetricChart \r\n        dateFrom={dateFrom} \r\n        dateTo={dateTo} \r\n        metric=\"barometricPressure\"\r\n        station={station} \r\n        title=\"Barometric pressure\" \r\n        unit=\"hPa\" \r\n        minValue={700}\r\n        maxValue={1500}\r\n    />;\r\n}\r\n\r\nexport default function Home() {\r\n    useInitialization(); // document.ready replacement\r\n    // default date range: 7 days from today\r\n    const DateFrom = new Date();\r\n    DateFrom.setDate(DateFrom.getDate() - 7);\r\n    const DateTo = new Date();\r\n    DateTo.setDate(DateTo.getDate() + 1);\r\n    const defaultDateFrom = DateFrom.toISOString().split('T')[0];\r\n    const defaultDateTo = DateTo.toISOString().split('T')[0];\r\n\r\n    const [dateFrom, setDateFrom] = useState(defaultDateFrom);\r\n    const [dateTo, setDateTo] = useState(defaultDateTo);\r\n    const [dateRender, setDateRender] = useState(true);\r\n\r\n    const [station, setStation] = useState('CWRU');\r\n\r\n    function reloadCharts() {\r\n        setDateRender(false)\r\n        setTimeout(() => setDateRender(true), 1);\r\n    }\r\n\r\n\r\n    function handleDateChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        if (event.target.id == 'from') {\r\n            setDateFrom(event.target.value);\r\n        } else {\r\n            setDateTo(event.target.value);\r\n        }\r\n        reloadCharts();\r\n    }\r\n\r\n    function handleStationChange(event: React.ChangeEvent<HTMLSelectElement>){\r\n        setStation(event.target.value);\r\n        console.log(event.target.value + ' selected!');\r\n        reloadCharts();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {/* Header */}\r\n            <div className=\"row topBar\">\r\n                {/* Logo */}\r\n                <div className=\"col-sm-2 pageTitle d-flex justify-content-center align-items-center\">\r\n                    <img src=\"/bera.svg\" className=\"logo\" alt=\"BERA Logo\" />\r\n                </div>\r\n                {/* Location Display */}\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"row header\">\r\n                        <div className=\"col-sm-9 d-flex justify-content-center align-items-center\" style={{ minHeight: \"100%\" }}>\r\n                            <div className=\"panel panel-body locationDisplay\">\r\n                                <span id=\"loc1\"></span> <i className=\"arrow fa-solid fa-arrow-right\"></i> <span id=\"loc2\"></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        {/* Change Location Button */}\r\n                        <div className=\"col-sm-2\">\r\n                            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: \"100%\" }}>\r\n                                <select className=\"custom-select locationBtn\" onChange={handleStationChange}>\r\n                                    <option defaultValue='true' value=\"CWRU\">CWRU</option>\r\n                                    <option value={\"KCLE\"}>KCLE</option>\r\n                                    <option value=\"KBKL\">KBKL</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Document */}\r\n            <div className=\"row inner\">\r\n                {/* Sidebar */}\r\n                <div className=\"col-sm-2 sidebar\">\r\n                    <h1>Data</h1>\r\n                    <hr />\r\n                    {/* Checklist */}\r\n                    <div className=\"checks\">\r\n                        {/* Precipitation */}\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id=\"precip\"\r\n                                onChange={() => toggleChart('#precipChart')}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"precip\">\r\n                                Precipitation\r\n                            </label>\r\n                        </div>\r\n                        <p></p>\r\n                        {/* Temperature */}\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id=\"temp\"\r\n                                onChange={() => toggleChart('#tempChart')}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"temp\">\r\n                                Temperature\r\n                            </label>\r\n                        </div>\r\n                        <p></p>\r\n                        {/* Humidity */}\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id=\"humid\"\r\n                                onChange={() => toggleChart('#humidChart')}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"humid\">\r\n                                Humidity\r\n                            </label>\r\n                        </div>\r\n                        <p></p>\r\n                        {/* Dewpoint */}\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id=\"dew\"\r\n                                onChange={() => toggleChart('#dewChart')}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"dew\">\r\n                                Dewpoint\r\n                            </label>\r\n                        </div>\r\n                        <p></p>\r\n                        {/* Pressure */}\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id=\"pressure\"\r\n                                onChange={() => toggleChart('#pressureChart')}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"pressure\">\r\n                                Pressure\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* Sidebar Footer */}\r\n                <div className=\"col-sm-2 setToBottom\">\r\n                    <div className=\"dates\">\r\n                        <h4>From</h4>\r\n                        <input type=\"date\" id=\"from\" className=\"dateInput\" value={dateFrom} onChange={handleDateChange}></input> to <input type=\"date\" id=\"to\" className=\"dateInput\" value={dateTo} onChange={handleDateChange}></input>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"sideLink\">\r\n                        <a href=\"https://github.com/avryr/bera\">Link to our GitHub...</a>\r\n                    </div>\r\n                </div>\r\n                {/* Charts */}\r\n                <div className = \"col-sm-2\"></div>\r\n                <div className=\"col-sm-10 charts\">\r\n                    {/* Precipitation */}\r\n                    <div id=\"precipChart\">\r\n                        <h2>Precipitation</h2>\r\n                        <hr />\r\n                        <div className=\"chart-container\" style={{ height: '400px' }}>\r\n                            {dateRender && <PrecipitationChart dateFrom={dateFrom} dateTo={dateTo} station={station}/>}\r\n                        </div>\r\n                    </div>\r\n                    {/* Temperature */}\r\n                    <div id=\"tempChart\">\r\n                        <h2>Temperature</h2>\r\n                        <hr />\r\n                        <div className=\"chart-container\" style={{ height: '400px' }}>\r\n                            {dateRender && <TemperatureChart dateFrom={dateFrom} dateTo={dateTo} station={station}/>}\r\n                        </div>\r\n                    </div>\r\n                    {/* Humidity */}\r\n                    <div id=\"humidChart\">\r\n                        <h2>Humidity</h2>\r\n                        <hr />\r\n                        <div className=\"chart-container\" style={{ height: '400px' }}>\r\n                            {dateRender && <HumidityChart dateFrom={dateFrom} dateTo={dateTo} station={station}/>}\r\n                        </div>\r\n                    </div>\r\n                    {/* Dewpoint */}\r\n                    <div id=\"dewChart\">\r\n                        <h2>Dewpoint</h2>\r\n                        <hr />\r\n                        <div className=\"chart-container\" style={{ height: '400px' }}>\r\n                            {dateRender && <DewpointChart dateFrom={dateFrom} dateTo={dateTo} station={station}/>}\r\n                        </div>\r\n                    </div>\r\n                    {/* Pressure */}\r\n                    <div id=\"pressureChart\">\r\n                        <h2>Pressure</h2>\r\n                        <hr />\r\n                        <div className=\"chart-container\" style={{ height: '400px' }}>\r\n                            {dateRender && <PressureChart dateFrom={dateFrom} dateTo={dateTo} station={station}/>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}